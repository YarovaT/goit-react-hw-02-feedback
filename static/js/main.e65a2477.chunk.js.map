{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css"],"names":["module","exports","Section","title","children","className","s","section","FeedbackOptions","options","onLeaveFeedback","buttonList","map","option","index","type","button","name","onClick","Statistics","good","neutral","bad","total","positivePercentage","statisticsList","statisticsItem","Notification","message","prototype","Proptypes","string","isRequired","App","state","countTotalFeedback","Object","values","reduce","a","b","countPositiveFeedbackPercentage","Math","round","event","target","setState","prevState","this","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yKACAA,EAAOC,QAAU,CAAC,eAAiB,mCAAmC,eAAiB,qC,uJCexEC,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,0BAASC,UAAWC,IAAEC,QAAtB,UACE,6BAAKJ,IACJC,M,gBCmBUI,EAtBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,oBAAIL,UAAWC,IAAEK,WAAjB,SACGF,EAAQG,KAAI,SAACC,EAAQC,GAAT,OACX,6BACE,wBACEC,KAAK,SACLV,UAAWC,IAAEU,OACbC,KAAMJ,EACNK,QAASR,EAJX,SAMGG,KAPIC,S,gBC8BAK,EAjCI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,qBAAInB,UAAWC,IAAEmB,eAAjB,UACE,qBAAIpB,UAAWC,IAAEoB,eAAjB,UACG,IADH,SAEQ,+BAAON,OAEf,qBAAIf,UAAWC,IAAEoB,eAAjB,UACG,IADH,YAEW,+BAAOL,OAElB,qBAAIhB,UAAWC,IAAEoB,eAAjB,UACG,IADH,QAEO,+BAAOJ,OAEd,qBAAIjB,UAAWC,IAAEoB,eAAjB,UACG,IADH,UAES,+BAAOH,OAEhB,qBAAIlB,UAAWC,IAAEoB,eAAjB,UACG,IADH,sBAEqB,iCAAOF,EAAP,c,QCrBnBG,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KAE1CD,EAAaE,UAAY,CACvBD,Q,OAASE,EAAUC,OAAOC,YAGbL,QC+DAM,E,4MAhEbC,MAAQ,CACNd,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPa,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKH,OAAOI,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,I,EAG3DC,gCAAkC,WAChC,IAGIjB,EAHED,EAAQ,EAAKY,qBACXf,EAAS,EAAKc,MAAdd,KAQR,OAHEI,EADEJ,EAAO,EACaA,EAAOG,EAAS,IACZ,EAErBmB,KAAKC,MAAMnB,I,EAGpBd,gBAAkB,SAAAkC,GAChB,IAAM3B,EAAO2B,EAAMC,OAAO5B,KAE1B,EAAK6B,UAAS,SAAAC,GAAS,sBACpB9B,EAAO8B,EAAU9B,GAAQ,O,4CAI9B,WACE,MAA+B+B,KAAKd,MAA5Bd,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQyB,KAAKb,qBACbX,EAAqBwB,KAAKP,kCAC1BhC,EAAU2B,OAAOa,KAAKD,KAAKd,OAEjC,OACE,qCACE,cAAC,EAAD,CAAS/B,MAAM,wBAAf,SACE,cAAC,EAAD,CACEM,QAASA,EACTC,gBAAiBsC,KAAKtC,oBAI1B,cAAC,EAAD,CAASP,MAAM,aAAf,SACGoB,EAAQ,EACP,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,cAAC,EAAD,CAAcI,QAAQ,+B,GAzDhBsB,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BvD,EAAOC,QAAU,CAAC,OAAS,gCAAgC,WAAa,sC,kBCAxED,EAAOC,QAAU,CAAC,QAAU,4B","file":"static/js/main.e65a2477.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsList\":\"Statistics_statisticsList__2Qup3\",\"statisticsItem\":\"Statistics_statisticsItem__1Tj2s\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <section className={s.section}>\n    <h2>{title}</h2>\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <ul className={s.buttonList}>\n    {options.map((option, index) => (\n      <li key={index}>\n        <button\n          type=\"button\"\n          className={s.button}\n          name={option}\n          onClick={onLeaveFeedback}\n        >\n          {option}\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <ul className={s.statisticsList}>\n    <li className={s.statisticsItem}>\n      {' '}\n      Good: <span>{good}</span>\n    </li>\n    <li className={s.statisticsItem}>\n      {' '}\n      Neutral: <span>{neutral}</span>\n    </li>\n    <li className={s.statisticsItem}>\n      {' '}\n      Bad: <span>{bad}</span>\n    </li>\n    <li className={s.statisticsItem}>\n      {' '}\n      Total: <span>{total}</span>\n    </li>\n    <li className={s.statisticsItem}>\n      {' '}\n      PositivePercentag: <span>{positivePercentage}%</span>\n    </li>\n  </ul>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport Proptypes from 'prop-types';\n\nconst Notification = ({ message }) => <p>{message}</p>;\n\nNotification.prototype = {\n  message: Proptypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Section from './components/Section/';\nimport FeedbackOptions from './components/FeedbackOptions/';\nimport Statistics from './components/Statistics/';\nimport Notification from './components/Notification/';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((a, b) => a + b, 0);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const total = this.countTotalFeedback();\n    const { good } = this.state;\n\n    let positivePercentage;\n\n    if (good > 0) {\n      positivePercentage = (good / total) * 100;\n    } else positivePercentage = 0;\n\n    return Math.round(positivePercentage);\n  };\n\n  onLeaveFeedback = event => {\n    const name = event.target.name;\n\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    const options = Object.keys(this.state);\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {total > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1M0nP\",\"buttonList\":\"FeedbackOptions_buttonList__1yfOP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__19xV5\"};"],"sourceRoot":""}